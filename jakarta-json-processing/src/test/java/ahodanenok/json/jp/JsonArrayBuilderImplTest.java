package ahodanenok.json.jp;

import java.math.BigInteger;
import java.math.BigDecimal;

import jakarta.json.JsonArray;
import jakarta.json.JsonArrayBuilder;
import jakarta.json.JsonValue;

import org.junit.jupiter.api.Test;

import static org.junit.jupiter.api.Assertions.assertEquals;

public class JsonArrayBuilderImplTest {

    @Test
    public void testBuildArray() {
        JsonArray array;
        JsonArrayBuilder builder = new JsonArrayBuilderImpl();
        assertEquals(0, builder.build().size());

        builder.add(JsonValue.TRUE);
        array = builder.build();
        assertEquals(1, array.size());
        assertEquals(true, array.getBoolean(0));

        builder.add(new JsonStringImpl("a1"));
        array = builder.build();
        assertEquals(2, array.size());
        assertEquals(true, array.getBoolean(0));
        assertEquals("a1", array.getString(1));

        builder.add(new BigDecimal("1e-4096"));
        array = builder.build();
        assertEquals(3, array.size());
        assertEquals(true, array.getBoolean(0));
        assertEquals("a1", array.getString(1));
        assertEquals(new BigDecimal("1e-4096"), array.getJsonNumber(2).bigDecimalValue());

        builder.add(new BigInteger("10000000000000000000000000000000000000000"));
        array = builder.build();
        assertEquals(4, array.size());
        assertEquals(true, array.getBoolean(0));
        assertEquals("a1", array.getString(1));
        assertEquals(new BigDecimal("1e-4096"), array.getJsonNumber(2).bigDecimalValue());
        assertEquals(new BigInteger("10000000000000000000000000000000000000000"), array.getJsonNumber(3).bigIntegerValue());

        builder.add(99999);
        array = builder.build();
        assertEquals(5, array.size());
        assertEquals(true, array.getBoolean(0));
        assertEquals("a1", array.getString(1));
        assertEquals(new BigDecimal("1e-4096"), array.getJsonNumber(2).bigDecimalValue());
        assertEquals(new BigInteger("10000000000000000000000000000000000000000"), array.getJsonNumber(3).bigIntegerValue());
        assertEquals(99999, array.getJsonNumber(4).intValue());

        builder.add(Long.MIN_VALUE);
        array = builder.build();
        assertEquals(6, array.size());
        assertEquals(true, array.getBoolean(0));
        assertEquals("a1", array.getString(1));
        assertEquals(new BigDecimal("1e-4096"), array.getJsonNumber(2).bigDecimalValue());
        assertEquals(new BigInteger("10000000000000000000000000000000000000000"), array.getJsonNumber(3).bigIntegerValue());
        assertEquals(99999, array.getJsonNumber(4).intValue());
        assertEquals(Long.MIN_VALUE, array.getJsonNumber(5).longValue());

        builder.add(Double.MAX_VALUE);
        array = builder.build();
        assertEquals(7, array.size());
        assertEquals(true, array.getBoolean(0));
        assertEquals("a1", array.getString(1));
        assertEquals(new BigDecimal("1e-4096"), array.getJsonNumber(2).bigDecimalValue());
        assertEquals(new BigInteger("10000000000000000000000000000000000000000"), array.getJsonNumber(3).bigIntegerValue());
        assertEquals(99999, array.getJsonNumber(4).intValue());
        assertEquals(Long.MIN_VALUE, array.getJsonNumber(5).longValue());
        assertEquals(Double.MAX_VALUE, array.getJsonNumber(6).doubleValue());

        builder.add(false);
        array = builder.build();
        assertEquals(8, array.size());
        assertEquals(true, array.getBoolean(0));
        assertEquals("a1", array.getString(1));
        assertEquals(new BigDecimal("1e-4096"), array.getJsonNumber(2).bigDecimalValue());
        assertEquals(new BigInteger("10000000000000000000000000000000000000000"), array.getJsonNumber(3).bigIntegerValue());
        assertEquals(99999, array.getJsonNumber(4).intValue());
        assertEquals(Long.MIN_VALUE, array.getJsonNumber(5).longValue());
        assertEquals(Double.MAX_VALUE, array.getJsonNumber(6).doubleValue());
        assertEquals(false, array.getBoolean(7));

        builder.addNull();
        array = builder.build();
        assertEquals(9, array.size());
        assertEquals(true, array.getBoolean(0));
        assertEquals("a1", array.getString(1));
        assertEquals(new BigDecimal("1e-4096"), array.getJsonNumber(2).bigDecimalValue());
        assertEquals(new BigInteger("10000000000000000000000000000000000000000"), array.getJsonNumber(3).bigIntegerValue());
        assertEquals(99999, array.getJsonNumber(4).intValue());
        assertEquals(Long.MIN_VALUE, array.getJsonNumber(5).longValue());
        assertEquals(Double.MAX_VALUE, array.getJsonNumber(6).doubleValue());
        assertEquals(false, array.getBoolean(7));
        assertEquals(true, array.isNull(8));

        builder.add(new JsonObjectBuilderImpl());
        array = builder.build();
        assertEquals(10, array.size());
        assertEquals(true, array.getBoolean(0));
        assertEquals("a1", array.getString(1));
        assertEquals(new BigDecimal("1e-4096"), array.getJsonNumber(2).bigDecimalValue());
        assertEquals(new BigInteger("10000000000000000000000000000000000000000"), array.getJsonNumber(3).bigIntegerValue());
        assertEquals(99999, array.getJsonNumber(4).intValue());
        assertEquals(Long.MIN_VALUE, array.getJsonNumber(5).longValue());
        assertEquals(Double.MAX_VALUE, array.getJsonNumber(6).doubleValue());
        assertEquals(false, array.getBoolean(7));
        assertEquals(true, array.isNull(8));
        assertEquals(0, array.getJsonObject(9).size());

        builder.add(new JsonArrayBuilderImpl());
        array = builder.build();
        assertEquals(11, array.size());
        assertEquals(true, array.getBoolean(0));
        assertEquals("a1", array.getString(1));
        assertEquals(new BigDecimal("1e-4096"), array.getJsonNumber(2).bigDecimalValue());
        assertEquals(new BigInteger("10000000000000000000000000000000000000000"), array.getJsonNumber(3).bigIntegerValue());
        assertEquals(99999, array.getJsonNumber(4).intValue());
        assertEquals(Long.MIN_VALUE, array.getJsonNumber(5).longValue());
        assertEquals(Double.MAX_VALUE, array.getJsonNumber(6).doubleValue());
        assertEquals(false, array.getBoolean(7));
        assertEquals(true, array.isNull(8));
        assertEquals(0, array.getJsonObject(9).size());
        assertEquals(0, array.getJsonArray(10).size());

        builder.addAll(new JsonArrayBuilderImpl().add(true).add(321));
        array = builder.build();
        assertEquals(13, array.size());
        assertEquals(true, array.getBoolean(0));
        assertEquals("a1", array.getString(1));
        assertEquals(new BigDecimal("1e-4096"), array.getJsonNumber(2).bigDecimalValue());
        assertEquals(new BigInteger("10000000000000000000000000000000000000000"), array.getJsonNumber(3).bigIntegerValue());
        assertEquals(99999, array.getJsonNumber(4).intValue());
        assertEquals(Long.MIN_VALUE, array.getJsonNumber(5).longValue());
        assertEquals(Double.MAX_VALUE, array.getJsonNumber(6).doubleValue());
        assertEquals(false, array.getBoolean(7));
        assertEquals(true, array.isNull(8));
        assertEquals(0, array.getJsonObject(9).size());
        assertEquals(0, array.getJsonArray(10).size());
        assertEquals(true, array.getBoolean(11));
        assertEquals(321, array.getInt(12));

        builder.add(1, JsonValue.EMPTY_JSON_OBJECT);
        array = builder.build();
        assertEquals(14, array.size());
        assertEquals(true, array.getBoolean(0));
        assertEquals(0, array.getJsonObject(1).size());
        assertEquals("a1", array.getString(2));
        assertEquals(new BigDecimal("1e-4096"), array.getJsonNumber(3).bigDecimalValue());
        assertEquals(new BigInteger("10000000000000000000000000000000000000000"), array.getJsonNumber(4).bigIntegerValue());
        assertEquals(99999, array.getJsonNumber(5).intValue());
        assertEquals(Long.MIN_VALUE, array.getJsonNumber(6).longValue());
        assertEquals(Double.MAX_VALUE, array.getJsonNumber(7).doubleValue());
        assertEquals(false, array.getBoolean(8));
        assertEquals(true, array.isNull(9));
        assertEquals(0, array.getJsonObject(10).size());
        assertEquals(0, array.getJsonArray(11).size());
        assertEquals(true, array.getBoolean(12));
        assertEquals(321, array.getInt(13));

        builder.add(9, "hello");
        array = builder.build();
        assertEquals(15, array.size());
        assertEquals(true, array.getBoolean(0));
        assertEquals(0, array.getJsonObject(1).size());
        assertEquals("a1", array.getString(2));
        assertEquals(new BigDecimal("1e-4096"), array.getJsonNumber(3).bigDecimalValue());
        assertEquals(new BigInteger("10000000000000000000000000000000000000000"), array.getJsonNumber(4).bigIntegerValue());
        assertEquals(99999, array.getJsonNumber(5).intValue());
        assertEquals(Long.MIN_VALUE, array.getJsonNumber(6).longValue());
        assertEquals(Double.MAX_VALUE, array.getJsonNumber(7).doubleValue());
        assertEquals(false, array.getBoolean(8));
        assertEquals("hello", array.getString(9));
        assertEquals(true, array.isNull(10));
        assertEquals(0, array.getJsonObject(11).size());
        assertEquals(0, array.getJsonArray(12).size());
        assertEquals(true, array.getBoolean(13));
        assertEquals(321, array.getInt(14));

        builder.add(13, BigDecimal.valueOf(1000));
        array = builder.build();
        assertEquals(16, array.size());
        assertEquals(true, array.getBoolean(0));
        assertEquals(0, array.getJsonObject(1).size());
        assertEquals("a1", array.getString(2));
        assertEquals(new BigDecimal("1e-4096"), array.getJsonNumber(3).bigDecimalValue());
        assertEquals(new BigInteger("10000000000000000000000000000000000000000"), array.getJsonNumber(4).bigIntegerValue());
        assertEquals(99999, array.getJsonNumber(5).intValue());
        assertEquals(Long.MIN_VALUE, array.getJsonNumber(6).longValue());
        assertEquals(Double.MAX_VALUE, array.getJsonNumber(7).doubleValue());
        assertEquals(false, array.getBoolean(8));
        assertEquals("hello", array.getString(9));
        assertEquals(true, array.isNull(10));
        assertEquals(0, array.getJsonObject(11).size());
        assertEquals(0, array.getJsonArray(12).size());
        assertEquals(1000, array.getJsonNumber(13).intValue());
        assertEquals(true, array.getBoolean(14));
        assertEquals(321, array.getInt(15));

        builder.add(8, BigInteger.valueOf(5));
        array = builder.build();
        assertEquals(17, array.size());
        assertEquals(true, array.getBoolean(0));
        assertEquals(0, array.getJsonObject(1).size());
        assertEquals("a1", array.getString(2));
        assertEquals(new BigDecimal("1e-4096"), array.getJsonNumber(3).bigDecimalValue());
        assertEquals(new BigInteger("10000000000000000000000000000000000000000"), array.getJsonNumber(4).bigIntegerValue());
        assertEquals(99999, array.getJsonNumber(5).intValue());
        assertEquals(Long.MIN_VALUE, array.getJsonNumber(6).longValue());
        assertEquals(Double.MAX_VALUE, array.getJsonNumber(7).doubleValue());
        assertEquals(BigInteger.valueOf(5), array.getJsonNumber(8).bigIntegerValue());
        assertEquals(false, array.getBoolean(9));
        assertEquals("hello", array.getString(10));
        assertEquals(true, array.isNull(11));
        assertEquals(0, array.getJsonObject(12).size());
        assertEquals(0, array.getJsonArray(13).size());
        assertEquals(1000, array.getJsonNumber(14).intValue());
        assertEquals(true, array.getBoolean(15));
        assertEquals(321, array.getInt(16));

        builder.add(16, Integer.MIN_VALUE);
        array = builder.build();
        assertEquals(18, array.size());
        assertEquals(true, array.getBoolean(0));
        assertEquals(0, array.getJsonObject(1).size());
        assertEquals("a1", array.getString(2));
        assertEquals(new BigDecimal("1e-4096"), array.getJsonNumber(3).bigDecimalValue());
        assertEquals(new BigInteger("10000000000000000000000000000000000000000"), array.getJsonNumber(4).bigIntegerValue());
        assertEquals(99999, array.getJsonNumber(5).intValue());
        assertEquals(Long.MIN_VALUE, array.getJsonNumber(6).longValue());
        assertEquals(Double.MAX_VALUE, array.getJsonNumber(7).doubleValue());
        assertEquals(BigInteger.valueOf(5), array.getJsonNumber(8).bigIntegerValue());
        assertEquals(false, array.getBoolean(9));
        assertEquals("hello", array.getString(10));
        assertEquals(true, array.isNull(11));
        assertEquals(0, array.getJsonObject(12).size());
        assertEquals(0, array.getJsonArray(13).size());
        assertEquals(1000, array.getJsonNumber(14).intValue());
        assertEquals(true, array.getBoolean(15));
        assertEquals(Integer.MIN_VALUE, array.getInt(16));
        assertEquals(321, array.getInt(17));

        builder.add(11, Long.MAX_VALUE);
        array = builder.build();
        assertEquals(19, array.size());
        assertEquals(true, array.getBoolean(0));
        assertEquals(0, array.getJsonObject(1).size());
        assertEquals("a1", array.getString(2));
        assertEquals(new BigDecimal("1e-4096"), array.getJsonNumber(3).bigDecimalValue());
        assertEquals(new BigInteger("10000000000000000000000000000000000000000"), array.getJsonNumber(4).bigIntegerValue());
        assertEquals(99999, array.getJsonNumber(5).intValue());
        assertEquals(Long.MIN_VALUE, array.getJsonNumber(6).longValue());
        assertEquals(Double.MAX_VALUE, array.getJsonNumber(7).doubleValue());
        assertEquals(BigInteger.valueOf(5), array.getJsonNumber(8).bigIntegerValue());
        assertEquals(false, array.getBoolean(9));
        assertEquals("hello", array.getString(10));
        assertEquals(Long.MAX_VALUE, array.getJsonNumber(11).longValue());
        assertEquals(true, array.isNull(12));
        assertEquals(0, array.getJsonObject(13).size());
        assertEquals(0, array.getJsonArray(14).size());
        assertEquals(1000, array.getJsonNumber(15).intValue());
        assertEquals(true, array.getBoolean(16));
        assertEquals(Integer.MIN_VALUE, array.getInt(17));
        assertEquals(321, array.getInt(18));

        builder.add(16, 503.52);
        array = builder.build();
        assertEquals(20, array.size());
        assertEquals(true, array.getBoolean(0));
        assertEquals(0, array.getJsonObject(1).size());
        assertEquals("a1", array.getString(2));
        assertEquals(new BigDecimal("1e-4096"), array.getJsonNumber(3).bigDecimalValue());
        assertEquals(new BigInteger("10000000000000000000000000000000000000000"), array.getJsonNumber(4).bigIntegerValue());
        assertEquals(99999, array.getJsonNumber(5).intValue());
        assertEquals(Long.MIN_VALUE, array.getJsonNumber(6).longValue());
        assertEquals(Double.MAX_VALUE, array.getJsonNumber(7).doubleValue());
        assertEquals(BigInteger.valueOf(5), array.getJsonNumber(8).bigIntegerValue());
        assertEquals(false, array.getBoolean(9));
        assertEquals("hello", array.getString(10));
        assertEquals(Long.MAX_VALUE, array.getJsonNumber(11).longValue());
        assertEquals(true, array.isNull(12));
        assertEquals(0, array.getJsonObject(13).size());
        assertEquals(0, array.getJsonArray(14).size());
        assertEquals(1000, array.getJsonNumber(15).intValue());
        assertEquals(503.52, array.getJsonNumber(16).doubleValue());
        assertEquals(true, array.getBoolean(17));
        assertEquals(Integer.MIN_VALUE, array.getInt(18));
        assertEquals(321, array.getInt(19));

        builder.add(19, false);
        array = builder.build();
        assertEquals(21, array.size());
        assertEquals(true, array.getBoolean(0));
        assertEquals(0, array.getJsonObject(1).size());
        assertEquals("a1", array.getString(2));
        assertEquals(new BigDecimal("1e-4096"), array.getJsonNumber(3).bigDecimalValue());
        assertEquals(new BigInteger("10000000000000000000000000000000000000000"), array.getJsonNumber(4).bigIntegerValue());
        assertEquals(99999, array.getJsonNumber(5).intValue());
        assertEquals(Long.MIN_VALUE, array.getJsonNumber(6).longValue());
        assertEquals(Double.MAX_VALUE, array.getJsonNumber(7).doubleValue());
        assertEquals(BigInteger.valueOf(5), array.getJsonNumber(8).bigIntegerValue());
        assertEquals(false, array.getBoolean(9));
        assertEquals("hello", array.getString(10));
        assertEquals(Long.MAX_VALUE, array.getJsonNumber(11).longValue());
        assertEquals(true, array.isNull(12));
        assertEquals(0, array.getJsonObject(13).size());
        assertEquals(0, array.getJsonArray(14).size());
        assertEquals(1000, array.getJsonNumber(15).intValue());
        assertEquals(503.52, array.getJsonNumber(16).doubleValue());
        assertEquals(true, array.getBoolean(17));
        assertEquals(Integer.MIN_VALUE, array.getInt(18));
        assertEquals(false, array.getBoolean(19));
        assertEquals(321, array.getInt(20));

        builder.addNull(10);
        array = builder.build();
        assertEquals(22, array.size());
        assertEquals(true, array.getBoolean(0));
        assertEquals(0, array.getJsonObject(1).size());
        assertEquals("a1", array.getString(2));
        assertEquals(new BigDecimal("1e-4096"), array.getJsonNumber(3).bigDecimalValue());
        assertEquals(new BigInteger("10000000000000000000000000000000000000000"), array.getJsonNumber(4).bigIntegerValue());
        assertEquals(99999, array.getJsonNumber(5).intValue());
        assertEquals(Long.MIN_VALUE, array.getJsonNumber(6).longValue());
        assertEquals(Double.MAX_VALUE, array.getJsonNumber(7).doubleValue());
        assertEquals(BigInteger.valueOf(5), array.getJsonNumber(8).bigIntegerValue());
        assertEquals(false, array.getBoolean(9));
        assertEquals(true, array.isNull(10));
        assertEquals("hello", array.getString(11));
        assertEquals(Long.MAX_VALUE, array.getJsonNumber(12).longValue());
        assertEquals(true, array.isNull(13));
        assertEquals(0, array.getJsonObject(14).size());
        assertEquals(0, array.getJsonArray(15).size());
        assertEquals(1000, array.getJsonNumber(16).intValue());
        assertEquals(503.52, array.getJsonNumber(17).doubleValue());
        assertEquals(true, array.getBoolean(18));
        assertEquals(Integer.MIN_VALUE, array.getInt(19));
        assertEquals(false, array.getBoolean(20));
        assertEquals(321, array.getInt(21));

        builder.add(12, new JsonObjectBuilderImpl());
        array = builder.build();
        assertEquals(23, array.size());
        assertEquals(true, array.getBoolean(0));
        assertEquals(0, array.getJsonObject(1).size());
        assertEquals("a1", array.getString(2));
        assertEquals(new BigDecimal("1e-4096"), array.getJsonNumber(3).bigDecimalValue());
        assertEquals(new BigInteger("10000000000000000000000000000000000000000"), array.getJsonNumber(4).bigIntegerValue());
        assertEquals(99999, array.getJsonNumber(5).intValue());
        assertEquals(Long.MIN_VALUE, array.getJsonNumber(6).longValue());
        assertEquals(Double.MAX_VALUE, array.getJsonNumber(7).doubleValue());
        assertEquals(BigInteger.valueOf(5), array.getJsonNumber(8).bigIntegerValue());
        assertEquals(false, array.getBoolean(9));
        assertEquals(true, array.isNull(10));
        assertEquals("hello", array.getString(11));
        assertEquals(0, array.getJsonObject(12).size());
        assertEquals(Long.MAX_VALUE, array.getJsonNumber(13).longValue());
        assertEquals(true, array.isNull(14));
        assertEquals(0, array.getJsonObject(15).size());
        assertEquals(0, array.getJsonArray(16).size());
        assertEquals(1000, array.getJsonNumber(17).intValue());
        assertEquals(503.52, array.getJsonNumber(18).doubleValue());
        assertEquals(true, array.getBoolean(19));
        assertEquals(Integer.MIN_VALUE, array.getInt(20));
        assertEquals(false, array.getBoolean(21));
        assertEquals(321, array.getInt(22));

        builder.add(20, new JsonArrayBuilderImpl());
        array = builder.build();
        assertEquals(24, array.size());
        assertEquals(true, array.getBoolean(0));
        assertEquals(0, array.getJsonObject(1).size());
        assertEquals("a1", array.getString(2));
        assertEquals(new BigDecimal("1e-4096"), array.getJsonNumber(3).bigDecimalValue());
        assertEquals(new BigInteger("10000000000000000000000000000000000000000"), array.getJsonNumber(4).bigIntegerValue());
        assertEquals(99999, array.getJsonNumber(5).intValue());
        assertEquals(Long.MIN_VALUE, array.getJsonNumber(6).longValue());
        assertEquals(Double.MAX_VALUE, array.getJsonNumber(7).doubleValue());
        assertEquals(BigInteger.valueOf(5), array.getJsonNumber(8).bigIntegerValue());
        assertEquals(false, array.getBoolean(9));
        assertEquals(true, array.isNull(10));
        assertEquals("hello", array.getString(11));
        assertEquals(0, array.getJsonObject(12).size());
        assertEquals(Long.MAX_VALUE, array.getJsonNumber(13).longValue());
        assertEquals(true, array.isNull(14));
        assertEquals(0, array.getJsonObject(15).size());
        assertEquals(0, array.getJsonArray(16).size());
        assertEquals(1000, array.getJsonNumber(17).intValue());
        assertEquals(503.52, array.getJsonNumber(18).doubleValue());
        assertEquals(true, array.getBoolean(19));
        assertEquals(0, array.getJsonArray(20).size());
        assertEquals(Integer.MIN_VALUE, array.getInt(21));
        assertEquals(false, array.getBoolean(22));
        assertEquals(321, array.getInt(23));

        builder.set(13, new JsonStringImpl("not a number"));
        array = builder.build();
        assertEquals(24, array.size());
        assertEquals(true, array.getBoolean(0));
        assertEquals(0, array.getJsonObject(1).size());
        assertEquals("a1", array.getString(2));
        assertEquals(new BigDecimal("1e-4096"), array.getJsonNumber(3).bigDecimalValue());
        assertEquals(new BigInteger("10000000000000000000000000000000000000000"), array.getJsonNumber(4).bigIntegerValue());
        assertEquals(99999, array.getJsonNumber(5).intValue());
        assertEquals(Long.MIN_VALUE, array.getJsonNumber(6).longValue());
        assertEquals(Double.MAX_VALUE, array.getJsonNumber(7).doubleValue());
        assertEquals(BigInteger.valueOf(5), array.getJsonNumber(8).bigIntegerValue());
        assertEquals(false, array.getBoolean(9));
        assertEquals(true, array.isNull(10));
        assertEquals("hello", array.getString(11));
        assertEquals(0, array.getJsonObject(12).size());
        assertEquals("not a number", array.getString(13));
        assertEquals(true, array.isNull(14));
        assertEquals(0, array.getJsonObject(15).size());
        assertEquals(0, array.getJsonArray(16).size());
        assertEquals(1000, array.getJsonNumber(17).intValue());
        assertEquals(503.52, array.getJsonNumber(18).doubleValue());
        assertEquals(true, array.getBoolean(19));
        assertEquals(0, array.getJsonArray(20).size());
        assertEquals(Integer.MIN_VALUE, array.getInt(21));
        assertEquals(false, array.getBoolean(22));
        assertEquals(321, array.getInt(23));

        builder.set(0, "123");
        array = builder.build();
        assertEquals(24, array.size());
        assertEquals("123", array.getString(0));
        assertEquals(0, array.getJsonObject(1).size());
        assertEquals("a1", array.getString(2));
        assertEquals(new BigDecimal("1e-4096"), array.getJsonNumber(3).bigDecimalValue());
        assertEquals(new BigInteger("10000000000000000000000000000000000000000"), array.getJsonNumber(4).bigIntegerValue());
        assertEquals(99999, array.getJsonNumber(5).intValue());
        assertEquals(Long.MIN_VALUE, array.getJsonNumber(6).longValue());
        assertEquals(Double.MAX_VALUE, array.getJsonNumber(7).doubleValue());
        assertEquals(BigInteger.valueOf(5), array.getJsonNumber(8).bigIntegerValue());
        assertEquals(false, array.getBoolean(9));
        assertEquals(true, array.isNull(10));
        assertEquals("hello", array.getString(11));
        assertEquals(0, array.getJsonObject(12).size());
        assertEquals("not a number", array.getString(13));
        assertEquals(true, array.isNull(14));
        assertEquals(0, array.getJsonObject(15).size());
        assertEquals(0, array.getJsonArray(16).size());
        assertEquals(1000, array.getJsonNumber(17).intValue());
        assertEquals(503.52, array.getJsonNumber(18).doubleValue());
        assertEquals(true, array.getBoolean(19));
        assertEquals(0, array.getJsonArray(20).size());
        assertEquals(Integer.MIN_VALUE, array.getInt(21));
        assertEquals(false, array.getBoolean(22));
        assertEquals(321, array.getInt(23));

        builder.set(19, new BigDecimal("123.56"));
        array = builder.build();
        assertEquals(24, array.size());
        assertEquals("123", array.getString(0));
        assertEquals(0, array.getJsonObject(1).size());
        assertEquals("a1", array.getString(2));
        assertEquals(new BigDecimal("1e-4096"), array.getJsonNumber(3).bigDecimalValue());
        assertEquals(new BigInteger("10000000000000000000000000000000000000000"), array.getJsonNumber(4).bigIntegerValue());
        assertEquals(99999, array.getJsonNumber(5).intValue());
        assertEquals(Long.MIN_VALUE, array.getJsonNumber(6).longValue());
        assertEquals(Double.MAX_VALUE, array.getJsonNumber(7).doubleValue());
        assertEquals(BigInteger.valueOf(5), array.getJsonNumber(8).bigIntegerValue());
        assertEquals(false, array.getBoolean(9));
        assertEquals(true, array.isNull(10));
        assertEquals("hello", array.getString(11));
        assertEquals(0, array.getJsonObject(12).size());
        assertEquals("not a number", array.getString(13));
        assertEquals(true, array.isNull(14));
        assertEquals(0, array.getJsonObject(15).size());
        assertEquals(0, array.getJsonArray(16).size());
        assertEquals(1000, array.getJsonNumber(17).intValue());
        assertEquals(503.52, array.getJsonNumber(18).doubleValue());
        assertEquals(new BigDecimal("123.56"), array.getJsonNumber(19).bigDecimalValue());
        assertEquals(0, array.getJsonArray(20).size());
        assertEquals(Integer.MIN_VALUE, array.getInt(21));
        assertEquals(false, array.getBoolean(22));
        assertEquals(321, array.getInt(23));

        builder.set(23, BigInteger.valueOf(98712));
        array = builder.build();
        assertEquals(24, array.size());
        assertEquals("123", array.getString(0));
        assertEquals(0, array.getJsonObject(1).size());
        assertEquals("a1", array.getString(2));
        assertEquals(new BigDecimal("1e-4096"), array.getJsonNumber(3).bigDecimalValue());
        assertEquals(new BigInteger("10000000000000000000000000000000000000000"), array.getJsonNumber(4).bigIntegerValue());
        assertEquals(99999, array.getJsonNumber(5).intValue());
        assertEquals(Long.MIN_VALUE, array.getJsonNumber(6).longValue());
        assertEquals(Double.MAX_VALUE, array.getJsonNumber(7).doubleValue());
        assertEquals(BigInteger.valueOf(5), array.getJsonNumber(8).bigIntegerValue());
        assertEquals(false, array.getBoolean(9));
        assertEquals(true, array.isNull(10));
        assertEquals("hello", array.getString(11));
        assertEquals(0, array.getJsonObject(12).size());
        assertEquals("not a number", array.getString(13));
        assertEquals(true, array.isNull(14));
        assertEquals(0, array.getJsonObject(15).size());
        assertEquals(0, array.getJsonArray(16).size());
        assertEquals(1000, array.getJsonNumber(17).intValue());
        assertEquals(503.52, array.getJsonNumber(18).doubleValue());
        assertEquals(new BigDecimal("123.56"), array.getJsonNumber(19).bigDecimalValue());
        assertEquals(0, array.getJsonArray(20).size());
        assertEquals(Integer.MIN_VALUE, array.getInt(21));
        assertEquals(false, array.getBoolean(22));
        assertEquals(BigInteger.valueOf(98712), array.getJsonNumber(23).bigIntegerValue());

        builder.set(2, -300);
        array = builder.build();
        assertEquals(24, array.size());
        assertEquals("123", array.getString(0));
        assertEquals(0, array.getJsonObject(1).size());
        assertEquals(-300, array.getInt(2));
        assertEquals(new BigDecimal("1e-4096"), array.getJsonNumber(3).bigDecimalValue());
        assertEquals(new BigInteger("10000000000000000000000000000000000000000"), array.getJsonNumber(4).bigIntegerValue());
        assertEquals(99999, array.getJsonNumber(5).intValue());
        assertEquals(Long.MIN_VALUE, array.getJsonNumber(6).longValue());
        assertEquals(Double.MAX_VALUE, array.getJsonNumber(7).doubleValue());
        assertEquals(BigInteger.valueOf(5), array.getJsonNumber(8).bigIntegerValue());
        assertEquals(false, array.getBoolean(9));
        assertEquals(true, array.isNull(10));
        assertEquals("hello", array.getString(11));
        assertEquals(0, array.getJsonObject(12).size());
        assertEquals("not a number", array.getString(13));
        assertEquals(true, array.isNull(14));
        assertEquals(0, array.getJsonObject(15).size());
        assertEquals(0, array.getJsonArray(16).size());
        assertEquals(1000, array.getJsonNumber(17).intValue());
        assertEquals(503.52, array.getJsonNumber(18).doubleValue());
        assertEquals(new BigDecimal("123.56"), array.getJsonNumber(19).bigDecimalValue());
        assertEquals(0, array.getJsonArray(20).size());
        assertEquals(Integer.MIN_VALUE, array.getInt(21));
        assertEquals(false, array.getBoolean(22));
        assertEquals(BigInteger.valueOf(98712), array.getJsonNumber(23).bigIntegerValue());

        builder.set(5, 5239128382391219224L);
        array = builder.build();
        assertEquals(24, array.size());
        assertEquals("123", array.getString(0));
        assertEquals(0, array.getJsonObject(1).size());
        assertEquals(-300, array.getInt(2));
        assertEquals(new BigDecimal("1e-4096"), array.getJsonNumber(3).bigDecimalValue());
        assertEquals(new BigInteger("10000000000000000000000000000000000000000"), array.getJsonNumber(4).bigIntegerValue());
        assertEquals(5239128382391219224L, array.getJsonNumber(5).longValue());
        assertEquals(Long.MIN_VALUE, array.getJsonNumber(6).longValue());
        assertEquals(Double.MAX_VALUE, array.getJsonNumber(7).doubleValue());
        assertEquals(BigInteger.valueOf(5), array.getJsonNumber(8).bigIntegerValue());
        assertEquals(false, array.getBoolean(9));
        assertEquals(true, array.isNull(10));
        assertEquals("hello", array.getString(11));
        assertEquals(0, array.getJsonObject(12).size());
        assertEquals("not a number", array.getString(13));
        assertEquals(true, array.isNull(14));
        assertEquals(0, array.getJsonObject(15).size());
        assertEquals(0, array.getJsonArray(16).size());
        assertEquals(1000, array.getJsonNumber(17).intValue());
        assertEquals(503.52, array.getJsonNumber(18).doubleValue());
        assertEquals(new BigDecimal("123.56"), array.getJsonNumber(19).bigDecimalValue());
        assertEquals(0, array.getJsonArray(20).size());
        assertEquals(Integer.MIN_VALUE, array.getInt(21));
        assertEquals(false, array.getBoolean(22));
        assertEquals(BigInteger.valueOf(98712), array.getJsonNumber(23).bigIntegerValue());

        builder.set(12, 30241.2523);
        array = builder.build();
        assertEquals(24, array.size());
        assertEquals("123", array.getString(0));
        assertEquals(0, array.getJsonObject(1).size());
        assertEquals(-300, array.getInt(2));
        assertEquals(new BigDecimal("1e-4096"), array.getJsonNumber(3).bigDecimalValue());
        assertEquals(new BigInteger("10000000000000000000000000000000000000000"), array.getJsonNumber(4).bigIntegerValue());
        assertEquals(5239128382391219224L, array.getJsonNumber(5).longValue());
        assertEquals(Long.MIN_VALUE, array.getJsonNumber(6).longValue());
        assertEquals(Double.MAX_VALUE, array.getJsonNumber(7).doubleValue());
        assertEquals(BigInteger.valueOf(5), array.getJsonNumber(8).bigIntegerValue());
        assertEquals(false, array.getBoolean(9));
        assertEquals(true, array.isNull(10));
        assertEquals("hello", array.getString(11));
        assertEquals(30241.2523, array.getJsonNumber(12).doubleValue());
        assertEquals("not a number", array.getString(13));
        assertEquals(true, array.isNull(14));
        assertEquals(0, array.getJsonObject(15).size());
        assertEquals(0, array.getJsonArray(16).size());
        assertEquals(1000, array.getJsonNumber(17).intValue());
        assertEquals(503.52, array.getJsonNumber(18).doubleValue());
        assertEquals(new BigDecimal("123.56"), array.getJsonNumber(19).bigDecimalValue());
        assertEquals(0, array.getJsonArray(20).size());
        assertEquals(Integer.MIN_VALUE, array.getInt(21));
        assertEquals(false, array.getBoolean(22));
        assertEquals(BigInteger.valueOf(98712), array.getJsonNumber(23).bigIntegerValue());

        builder.set(7, true);
        array = builder.build();
        assertEquals(24, array.size());
        assertEquals("123", array.getString(0));
        assertEquals(0, array.getJsonObject(1).size());
        assertEquals(-300, array.getInt(2));
        assertEquals(new BigDecimal("1e-4096"), array.getJsonNumber(3).bigDecimalValue());
        assertEquals(new BigInteger("10000000000000000000000000000000000000000"), array.getJsonNumber(4).bigIntegerValue());
        assertEquals(5239128382391219224L, array.getJsonNumber(5).longValue());
        assertEquals(Long.MIN_VALUE, array.getJsonNumber(6).longValue());
        assertEquals(true, array.getBoolean(7));
        assertEquals(BigInteger.valueOf(5), array.getJsonNumber(8).bigIntegerValue());
        assertEquals(false, array.getBoolean(9));
        assertEquals(true, array.isNull(10));
        assertEquals("hello", array.getString(11));
        assertEquals(30241.2523, array.getJsonNumber(12).doubleValue());
        assertEquals("not a number", array.getString(13));
        assertEquals(true, array.isNull(14));
        assertEquals(0, array.getJsonObject(15).size());
        assertEquals(0, array.getJsonArray(16).size());
        assertEquals(1000, array.getJsonNumber(17).intValue());
        assertEquals(503.52, array.getJsonNumber(18).doubleValue());
        assertEquals(new BigDecimal("123.56"), array.getJsonNumber(19).bigDecimalValue());
        assertEquals(0, array.getJsonArray(20).size());
        assertEquals(Integer.MIN_VALUE, array.getInt(21));
        assertEquals(false, array.getBoolean(22));
        assertEquals(BigInteger.valueOf(98712), array.getJsonNumber(23).bigIntegerValue());

        builder.setNull(15);
        array = builder.build();
        assertEquals(24, array.size());
        assertEquals("123", array.getString(0));
        assertEquals(0, array.getJsonObject(1).size());
        assertEquals(-300, array.getInt(2));
        assertEquals(new BigDecimal("1e-4096"), array.getJsonNumber(3).bigDecimalValue());
        assertEquals(new BigInteger("10000000000000000000000000000000000000000"), array.getJsonNumber(4).bigIntegerValue());
        assertEquals(5239128382391219224L, array.getJsonNumber(5).longValue());
        assertEquals(Long.MIN_VALUE, array.getJsonNumber(6).longValue());
        assertEquals(true, array.getBoolean(7));
        assertEquals(BigInteger.valueOf(5), array.getJsonNumber(8).bigIntegerValue());
        assertEquals(false, array.getBoolean(9));
        assertEquals(true, array.isNull(10));
        assertEquals("hello", array.getString(11));
        assertEquals(30241.2523, array.getJsonNumber(12).doubleValue());
        assertEquals("not a number", array.getString(13));
        assertEquals(true, array.isNull(14));
        assertEquals(JsonValue.NULL, array.get(15));
        assertEquals(0, array.getJsonArray(16).size());
        assertEquals(1000, array.getJsonNumber(17).intValue());
        assertEquals(503.52, array.getJsonNumber(18).doubleValue());
        assertEquals(new BigDecimal("123.56"), array.getJsonNumber(19).bigDecimalValue());
        assertEquals(0, array.getJsonArray(20).size());
        assertEquals(Integer.MIN_VALUE, array.getInt(21));
        assertEquals(false, array.getBoolean(22));
        assertEquals(BigInteger.valueOf(98712), array.getJsonNumber(23).bigIntegerValue());

        builder.set(17, new JsonObjectBuilderImpl());
        array = builder.build();
        assertEquals(24, array.size());
        assertEquals("123", array.getString(0));
        assertEquals(0, array.getJsonObject(1).size());
        assertEquals(-300, array.getInt(2));
        assertEquals(new BigDecimal("1e-4096"), array.getJsonNumber(3).bigDecimalValue());
        assertEquals(new BigInteger("10000000000000000000000000000000000000000"), array.getJsonNumber(4).bigIntegerValue());
        assertEquals(5239128382391219224L, array.getJsonNumber(5).longValue());
        assertEquals(Long.MIN_VALUE, array.getJsonNumber(6).longValue());
        assertEquals(true, array.getBoolean(7));
        assertEquals(BigInteger.valueOf(5), array.getJsonNumber(8).bigIntegerValue());
        assertEquals(false, array.getBoolean(9));
        assertEquals(true, array.isNull(10));
        assertEquals("hello", array.getString(11));
        assertEquals(30241.2523, array.getJsonNumber(12).doubleValue());
        assertEquals("not a number", array.getString(13));
        assertEquals(true, array.isNull(14));
        assertEquals(JsonValue.NULL, array.get(15));
        assertEquals(0, array.getJsonArray(16).size());
        assertEquals(0, array.getJsonObject(17).size());
        assertEquals(503.52, array.getJsonNumber(18).doubleValue());
        assertEquals(new BigDecimal("123.56"), array.getJsonNumber(19).bigDecimalValue());
        assertEquals(0, array.getJsonArray(20).size());
        assertEquals(Integer.MIN_VALUE, array.getInt(21));
        assertEquals(false, array.getBoolean(22));
        assertEquals(BigInteger.valueOf(98712), array.getJsonNumber(23).bigIntegerValue());

        builder.set(4, new JsonArrayBuilderImpl());
        array = builder.build();
        assertEquals(24, array.size());
        assertEquals("123", array.getString(0));
        assertEquals(0, array.getJsonObject(1).size());
        assertEquals(-300, array.getInt(2));
        assertEquals(new BigDecimal("1e-4096"), array.getJsonNumber(3).bigDecimalValue());
        assertEquals(0, array.getJsonArray(4).size());
        assertEquals(5239128382391219224L, array.getJsonNumber(5).longValue());
        assertEquals(Long.MIN_VALUE, array.getJsonNumber(6).longValue());
        assertEquals(true, array.getBoolean(7));
        assertEquals(BigInteger.valueOf(5), array.getJsonNumber(8).bigIntegerValue());
        assertEquals(false, array.getBoolean(9));
        assertEquals(true, array.isNull(10));
        assertEquals("hello", array.getString(11));
        assertEquals(30241.2523, array.getJsonNumber(12).doubleValue());
        assertEquals("not a number", array.getString(13));
        assertEquals(true, array.isNull(14));
        assertEquals(JsonValue.NULL, array.get(15));
        assertEquals(0, array.getJsonArray(16).size());
        assertEquals(0, array.getJsonObject(17).size());
        assertEquals(503.52, array.getJsonNumber(18).doubleValue());
        assertEquals(new BigDecimal("123.56"), array.getJsonNumber(19).bigDecimalValue());
        assertEquals(0, array.getJsonArray(20).size());
        assertEquals(Integer.MIN_VALUE, array.getInt(21));
        assertEquals(false, array.getBoolean(22));
        assertEquals(BigInteger.valueOf(98712), array.getJsonNumber(23).bigIntegerValue());

        builder.remove(12);
        array = builder.build();
        assertEquals(23, array.size());
        assertEquals("123", array.getString(0));
        assertEquals(0, array.getJsonObject(1).size());
        assertEquals(-300, array.getInt(2));
        assertEquals(new BigDecimal("1e-4096"), array.getJsonNumber(3).bigDecimalValue());
        assertEquals(0, array.getJsonArray(4).size());
        assertEquals(5239128382391219224L, array.getJsonNumber(5).longValue());
        assertEquals(Long.MIN_VALUE, array.getJsonNumber(6).longValue());
        assertEquals(true, array.getBoolean(7));
        assertEquals(BigInteger.valueOf(5), array.getJsonNumber(8).bigIntegerValue());
        assertEquals(false, array.getBoolean(9));
        assertEquals(true, array.isNull(10));
        assertEquals("hello", array.getString(11));
        assertEquals("not a number", array.getString(12));
        assertEquals(true, array.isNull(13));
        assertEquals(JsonValue.NULL, array.get(14));
        assertEquals(0, array.getJsonArray(15).size());
        assertEquals(0, array.getJsonObject(16).size());
        assertEquals(503.52, array.getJsonNumber(17).doubleValue());
        assertEquals(new BigDecimal("123.56"), array.getJsonNumber(18).bigDecimalValue());
        assertEquals(0, array.getJsonArray(19).size());
        assertEquals(Integer.MIN_VALUE, array.getInt(20));
        assertEquals(false, array.getBoolean(21));
        assertEquals(BigInteger.valueOf(98712), array.getJsonNumber(22).bigIntegerValue());

        builder.remove(22);
        array = builder.build();
        assertEquals(22, array.size());
        assertEquals("123", array.getString(0));
        assertEquals(0, array.getJsonObject(1).size());
        assertEquals(-300, array.getInt(2));
        assertEquals(new BigDecimal("1e-4096"), array.getJsonNumber(3).bigDecimalValue());
        assertEquals(0, array.getJsonArray(4).size());
        assertEquals(5239128382391219224L, array.getJsonNumber(5).longValue());
        assertEquals(Long.MIN_VALUE, array.getJsonNumber(6).longValue());
        assertEquals(true, array.getBoolean(7));
        assertEquals(BigInteger.valueOf(5), array.getJsonNumber(8).bigIntegerValue());
        assertEquals(false, array.getBoolean(9));
        assertEquals(true, array.isNull(10));
        assertEquals("hello", array.getString(11));
        assertEquals("not a number", array.getString(12));
        assertEquals(true, array.isNull(13));
        assertEquals(JsonValue.NULL, array.get(14));
        assertEquals(0, array.getJsonArray(15).size());
        assertEquals(0, array.getJsonObject(16).size());
        assertEquals(503.52, array.getJsonNumber(17).doubleValue());
        assertEquals(new BigDecimal("123.56"), array.getJsonNumber(18).bigDecimalValue());
        assertEquals(0, array.getJsonArray(19).size());
        assertEquals(Integer.MIN_VALUE, array.getInt(20));
        assertEquals(false, array.getBoolean(21));

        builder.remove(0);
        array = builder.build();
        assertEquals(21, array.size());
        assertEquals(0, array.getJsonObject(0).size());
        assertEquals(-300, array.getInt(1));
        assertEquals(new BigDecimal("1e-4096"), array.getJsonNumber(2).bigDecimalValue());
        assertEquals(0, array.getJsonArray(3).size());
        assertEquals(5239128382391219224L, array.getJsonNumber(4).longValue());
        assertEquals(Long.MIN_VALUE, array.getJsonNumber(5).longValue());
        assertEquals(true, array.getBoolean(6));
        assertEquals(BigInteger.valueOf(5), array.getJsonNumber(7).bigIntegerValue());
        assertEquals(false, array.getBoolean(8));
        assertEquals(true, array.isNull(9));
        assertEquals("hello", array.getString(10));
        assertEquals("not a number", array.getString(11));
        assertEquals(true, array.isNull(12));
        assertEquals(JsonValue.NULL, array.get(13));
        assertEquals(0, array.getJsonArray(14).size());
        assertEquals(0, array.getJsonObject(15).size());
        assertEquals(503.52, array.getJsonNumber(16).doubleValue());
        assertEquals(new BigDecimal("123.56"), array.getJsonNumber(17).bigDecimalValue());
        assertEquals(0, array.getJsonArray(18).size());
        assertEquals(Integer.MIN_VALUE, array.getInt(19));
        assertEquals(false, array.getBoolean(20));
    }
}